//
// File generated by rootcint at Tue Apr 24 14:07:01 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME HggDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "HggDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEpairlEfloatcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEfloatcOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEfloatcOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEfloatcOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEfloatcOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEfloatcOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEfloatcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<float,int> >*)
   {
      vector<pair<float,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<float,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<float,int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<float,int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEfloatcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<float,int> >) );
      instance.SetNew(&new_vectorlEpairlEfloatcOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEfloatcOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEfloatcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEfloatcOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEfloatcOintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<float,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<float,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEfloatcOintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<float,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEfloatcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,int> > : new vector<pair<float,int> >;
   }
   static void *newArray_vectorlEpairlEfloatcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,int> >[nElements] : new vector<pair<float,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEfloatcOintgRsPgR(void *p) {
      delete ((vector<pair<float,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEfloatcOintgRsPgR(void *p) {
      delete [] ((vector<pair<float,int> >*)p);
   }
   static void destruct_vectorlEpairlEfloatcOintgRsPgR(void *p) {
      typedef vector<pair<float,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<float,int> >

namespace ROOT {
   void vectorlEpairlEunsignedsPintcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEunsignedsPintcOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEunsignedsPintcOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<unsigned int,int> >*)
   {
      vector<pair<unsigned int,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<unsigned int,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<unsigned int,int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<pair<unsigned int,int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEunsignedsPintcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<unsigned int,int> >) );
      instance.SetNew(&new_vectorlEpairlEunsignedsPintcOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEunsignedsPintcOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEunsignedsPintcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEunsignedsPintcOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEunsignedsPintcOintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<pair<unsigned int,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<unsigned int,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEunsignedsPintcOintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<pair<unsigned int,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<unsigned int,int> > : new vector<pair<unsigned int,int> >;
   }
   static void *newArray_vectorlEpairlEunsignedsPintcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<unsigned int,int> >[nElements] : new vector<pair<unsigned int,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p) {
      delete ((vector<pair<unsigned int,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p) {
      delete [] ((vector<pair<unsigned int,int> >*)p);
   }
   static void destruct_vectorlEpairlEunsignedsPintcOintgRsPgR(void *p) {
      typedef vector<pair<unsigned int,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<pair<unsigned int,int> >

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

/********************************************************
* HggDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableHggDict();

extern "C" void G__set_cpp_environmentHggDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__cpp_reset_tagtableHggDict();
}
#include <new>
extern "C" int G__cpp_dllrevHggDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > > */
static int G__HggDict_164_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reference obj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->at((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_reference obj = ((const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->at((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator* pobj;
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator xobj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->begin();
         pobj = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator* pobj;
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator xobj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->end();
         pobj = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator* pobj;
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator xobj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator* pobj;
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator xobj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->rend();
         pobj = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->resize((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->resize((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]), *((pair<unsigned int,int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reference obj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->operator[]((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_reference obj = ((const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->operator[]((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >[n];
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >;
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]), *(pair<unsigned int,int>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]), *(pair<unsigned int,int>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >(*(vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >(*(vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >(*((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >(*((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >& obj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->operator=(*(vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->reserve((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<unsigned int,int>& obj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<unsigned int,int>& obj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->push_back(*(pair<unsigned int,int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->swap(*(vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator* pobj;
         vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator xobj = ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->insert(*((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator*) G__int(libp->para[0])), *(pair<unsigned int,int>*) libp->para[1].ref);
         pobj = new vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->insert(*((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->insert(*((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator*) G__int(libp->para[0])), (vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type) G__int(libp->para[1])
, *(pair<unsigned int,int>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->erase(*((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->erase(*((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_164_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > > G__TvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR;
static int G__HggDict_164_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) (soff+(sizeof(vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >)*i)))->~G__TvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*) (soff))->~G__TvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static int G__HggDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->at((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->begin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->end();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rbegin();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->rend();
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->resize((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *((vector<float,allocator<float> >*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference obj = ((const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator[]((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]), *(vector<float,allocator<float> >*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->operator=(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->reserve((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->push_back(*(vector<float,allocator<float> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->swap(*(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator* pobj;
         vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator xobj = ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *(vector<float,allocator<float> >*) libp->para[1].ref);
         pobj = new vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[1]))
, *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->insert(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type) G__int(libp->para[1])
, *(vector<float,allocator<float> >*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->erase(*((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[0])), *((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR;
static int G__HggDict_168_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff+(sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >)*i)))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*) (soff))->~G__TvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<pair<float,int>,allocator<pair<float,int> > > */
static int G__HggDict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<float,int>,allocator<pair<float,int> > >::reference obj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->at((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,int>,allocator<pair<float,int> > >::const_reference obj = ((const vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->at((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,int>,allocator<pair<float,int> > >::iterator* pobj;
         vector<pair<float,int>,allocator<pair<float,int> > >::iterator xobj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->begin();
         pobj = new vector<pair<float,int>,allocator<pair<float,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,int>,allocator<pair<float,int> > >::iterator* pobj;
         vector<pair<float,int>,allocator<pair<float,int> > >::iterator xobj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->end();
         pobj = new vector<pair<float,int>,allocator<pair<float,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator* pobj;
         vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator xobj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator* pobj;
         vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator xobj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->rend();
         pobj = new vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->resize((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->resize((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]), *((pair<float,int>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<float,int>,allocator<pair<float,int> > >::reference obj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->operator[]((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,int>,allocator<pair<float,int> > >::const_reference obj = ((const vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->operator[]((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,int>,allocator<pair<float,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,int>,allocator<pair<float,int> > >[n];
     } else {
       p = new((void*) gvp) vector<pair<float,int>,allocator<pair<float,int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,int>,allocator<pair<float,int> > >;
     } else {
       p = new((void*) gvp) vector<pair<float,int>,allocator<pair<float,int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,int>,allocator<pair<float,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,int>,allocator<pair<float,int> > >((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]), *(pair<float,int>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<pair<float,int>,allocator<pair<float,int> > >((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]), *(pair<float,int>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<pair<float,int>,allocator<pair<float,int> > >((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<pair<float,int>,allocator<pair<float,int> > >((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,int>,allocator<pair<float,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<float,int>,allocator<pair<float,int> > >(*(vector<pair<float,int>,allocator<pair<float,int> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<pair<float,int>,allocator<pair<float,int> > >(*(vector<pair<float,int>,allocator<pair<float,int> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<pair<float,int>,allocator<pair<float,int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<pair<float,int>,allocator<pair<float,int> > >(*((vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<pair<float,int>,allocator<pair<float,int> > >(*((vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator*) G__int(libp->para[0])), *((vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<pair<float,int>,allocator<pair<float,int> > >& obj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->operator=(*(vector<pair<float,int>,allocator<pair<float,int> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->reserve((vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<float,int>& obj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<float,int>& obj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->push_back(*(pair<float,int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->swap(*(vector<pair<float,int>,allocator<pair<float,int> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<pair<float,int>,allocator<pair<float,int> > >::iterator* pobj;
         vector<pair<float,int>,allocator<pair<float,int> > >::iterator xobj = ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->insert(*((vector<pair<float,int>,allocator<pair<float,int> > >::iterator*) G__int(libp->para[0])), *(pair<float,int>*) libp->para[1].ref);
         pobj = new vector<pair<float,int>,allocator<pair<float,int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->insert(*((vector<pair<float,int>,allocator<pair<float,int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->insert(*((vector<pair<float,int>,allocator<pair<float,int> > >::iterator*) G__int(libp->para[0])), (vector<pair<float,int>,allocator<pair<float,int> > >::size_type) G__int(libp->para[1])
, *(pair<float,int>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->erase(*((vector<pair<float,int>,allocator<pair<float,int> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->erase(*((vector<pair<float,int>,allocator<pair<float,int> > >::iterator*) G__int(libp->para[0])), *((vector<pair<float,int>,allocator<pair<float,int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__HggDict_173_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<pair<float,int>,allocator<pair<float,int> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<pair<float,int>,allocator<pair<float,int> > > G__TvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR;
static int G__HggDict_173_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<pair<float,int>,allocator<pair<float,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<pair<float,int>,allocator<pair<float,int> > >*) (soff+(sizeof(vector<pair<float,int>,allocator<pair<float,int> > >)*i)))->~G__TvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<pair<float,int>,allocator<pair<float,int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<pair<float,int>,allocator<pair<float,int> > >*) (soff))->~G__TvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > > */

/* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */

/* vector<pair<float,int>,allocator<pair<float,int> > > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncHggDict {
 public:
  G__Sizep2memfuncHggDict(): p(&G__Sizep2memfuncHggDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncHggDict::*p)();
};

size_t G__get_sizep2memfuncHggDict()
{
  G__Sizep2memfuncHggDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceHggDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableHggDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__HggDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR),256,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR),1,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR),257,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float> >",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<float,int> >",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR),256,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR),1,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR),257,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<float,int> >",117,G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > > */
static void G__setup_memvarvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   { vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > > *p; p=(vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
static void G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   { vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > *p; p=(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<pair<float,int>,allocator<pair<float,int> > > */
static void G__setup_memvarvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   { vector<pair<float,int>,allocator<pair<float,int> > > *p; p=(vector<pair<float,int>,allocator<pair<float,int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarHggDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR(void) {
   /* vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__memfunc_setup("at",213,G__HggDict_164_0_1, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR), G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HggDict_164_0_2, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR), G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HggDict_164_0_3, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HggDict_164_0_4, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HggDict_164_0_5, 117, G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HggDict_164_0_6, 117, G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HggDict_164_0_7, 107, -1, G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HggDict_164_0_8, 107, -1, G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HggDict_164_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HggDict_164_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - sz u 'pair<unsigned int,int>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HggDict_164_0_11, 107, -1, G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HggDict_164_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HggDict_164_0_13, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR), G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HggDict_164_0_14, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR), G__defined_typename("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >",6270,G__HggDict_164_0_15, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >",6270,G__HggDict_164_0_16, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - n u 'pair<unsigned int,int>' - 11 '(pair<unsigned int,int>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >",6270,G__HggDict_164_0_17, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >",6270,G__HggDict_164_0_18, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator' 10 - first u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HggDict_164_0_19, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HggDict_164_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HggDict_164_0_21, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HggDict_164_0_22, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEunsignedsPintcOintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HggDict_164_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<unsigned int,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HggDict_164_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_164_0_25, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' - 0 - position u 'pair<unsigned int,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_164_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' - 0 - position u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator' 10 - first "
"u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_164_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' - 0 - position k - 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::size_type' 0 - n "
"u 'pair<unsigned int,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HggDict_164_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HggDict_164_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HggDict_164_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' - 0 - first u 'vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HggDict_164_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >", 6396, G__HggDict_164_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR(void) {
   /* vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__memfunc_setup("at",213,G__HggDict_168_0_1, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HggDict_168_0_2, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HggDict_168_0_3, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HggDict_168_0_4, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HggDict_168_0_5, 117, G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HggDict_168_0_6, 117, G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HggDict_168_0_7, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HggDict_168_0_8, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HggDict_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HggDict_168_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - sz u 'vector<float,allocator<float> >' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HggDict_168_0_11, 107, -1, G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HggDict_168_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HggDict_168_0_13, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HggDict_168_0_14, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__HggDict_168_0_15, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__HggDict_168_0_16, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n u 'vector<float,allocator<float> >' - 11 '(vector<float,allocator<float> >)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__HggDict_168_0_17, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >",7988,G__HggDict_168_0_18, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HggDict_168_0_19, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HggDict_168_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HggDict_168_0_21, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HggDict_168_0_22, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HggDict_168_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HggDict_168_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_168_0_25, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_168_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - first "
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_168_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position k - 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::size_type' 0 - n "
"u 'vector<float,allocator<float> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HggDict_168_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HggDict_168_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HggDict_168_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - first u 'vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HggDict_168_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >", 8114, G__HggDict_168_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR(void) {
   /* vector<pair<float,int>,allocator<pair<float,int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR));
   G__memfunc_setup("at",213,G__HggDict_173_0_1, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR), G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__HggDict_173_0_2, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR), G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__HggDict_173_0_3, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__HggDict_173_0_4, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__HggDict_173_0_5, 117, G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__HggDict_173_0_6, 117, G__get_linked_tagnum(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__HggDict_173_0_7, 107, -1, G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__HggDict_173_0_8, 107, -1, G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HggDict_173_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__HggDict_173_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - sz u 'pair<float,int>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__HggDict_173_0_11, 107, -1, G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__HggDict_173_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HggDict_173_0_13, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR), G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__HggDict_173_0_14, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR), G__defined_typename("vector<pair<float,int>,allocator<pair<float,int> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,int>,allocator<pair<float,int> > >",4890,G__HggDict_173_0_15, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,int>,allocator<pair<float,int> > >",4890,G__HggDict_173_0_16, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - n u 'pair<float,int>' - 11 '(pair<float,int>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,int>,allocator<pair<float,int> > >",4890,G__HggDict_173_0_17, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<pair<float,int>,allocator<pair<float,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<pair<float,int>,allocator<pair<float,int> > >",4890,G__HggDict_173_0_18, 105, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' 'vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator' 10 - first u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' 'vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__HggDict_173_0_19, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<pair<float,int>,allocator<pair<float,int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__HggDict_173_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__HggDict_173_0_21, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__HggDict_173_0_22, 117, G__get_linked_tagnum(&G__HggDictLN_pairlEfloatcOintgR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__HggDict_173_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'pair<float,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__HggDict_173_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<float,int>,allocator<pair<float,int> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_173_0_25, 117, G__get_linked_tagnum(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' - 0 - position u 'pair<float,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_173_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' - 0 - position u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' 'vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator' 10 - first "
"u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' 'vector<pair<float,int>,allocator<pair<float,int> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__HggDict_173_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' - 0 - position k - 'vector<pair<float,int>,allocator<pair<float,int> > >::size_type' 0 - n "
"u 'pair<float,int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__HggDict_173_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HggDict_173_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__HggDict_173_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' - 0 - first u 'vector<pair<float,int>,allocator<pair<float,int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__HggDict_173_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<pair<float,int>,allocator<pair<float,int> > >", 5016, G__HggDict_173_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncHggDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalHggDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcHggDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__HggDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__HggDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HggDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__HggDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HggDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiterator = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__HggDictLN_pairlEfloatcOintgR = { "pair<float,int>" , 115 , -1 };
G__linked_taginfo G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR = { "vector<pair<float,int>,allocator<pair<float,int> > >" , 99 , -1 };
G__linked_taginfo G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiterator = { "vector<pair<float,int>,allocator<pair<float,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<float,int>,allocator<pair<float,int> > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableHggDict() {
  G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__HggDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__HggDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HggDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__HggDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HggDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HggDictLN_pairlEfloatcOintgR.tagnum = -1 ;
  G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR.tagnum = -1 ;
  G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableHggDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_pairlEunsignedsPintcOintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),sizeof(vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >),-1,36608,(char*)NULL,G__setup_memvarvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR,G__setup_memfuncvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),sizeof(vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >),-1,36608,(char*)NULL,G__setup_memvarvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR,G__setup_memfuncvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HggDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_pairlEfloatcOintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR),sizeof(vector<pair<float,int>,allocator<pair<float,int> > >),-1,36608,(char*)NULL,G__setup_memvarvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR,G__setup_memfuncvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__HggDictLN_vectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__HggDictLN_reverse_iteratorlEvectorlEpairlEfloatcOintgRcOallocatorlEpairlEfloatcOintgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupHggDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupHggDict()");
  G__set_cpp_environmentHggDict();
  G__cpp_setup_tagtableHggDict();

  G__cpp_setup_inheritanceHggDict();

  G__cpp_setup_typetableHggDict();

  G__cpp_setup_memvarHggDict();

  G__cpp_setup_memfuncHggDict();
  G__cpp_setup_globalHggDict();
  G__cpp_setup_funcHggDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncHggDict();
  return;
}
class G__cpp_setup_initHggDict {
  public:
    G__cpp_setup_initHggDict() { G__add_setup_func("HggDict",(G__incsetup)(&G__cpp_setupHggDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initHggDict() { G__remove_setup_func("HggDict"); }
};
G__cpp_setup_initHggDict G__cpp_setup_initializerHggDict;

